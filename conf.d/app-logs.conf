# Конфигурация логов веб-приложения
C:\WebApps\MyApp\logs\*.log {
    daily
    rotate 30
    compress
    missingok
    notifempty
    maxsize 50M
    
    # Скрипт, который выполняется перед ротацией
    prerotate
        # Можно добавить код для проверки доступности приложения
        $webappRunning = Get-Process -Name "w3wp" -ErrorAction SilentlyContinue
        if ($webappRunning) {
            Write-Host "Веб-приложение работает, продолжаем ротацию"
        }
    endscript
    
    # Скрипт, выполняемый после ротации
    postrotate
        # Отправка уведомления об успешной ротации
        # Send-MailMessage -To "admin@example.com" -Subject "Logs rotated"
    endscript
}

# Логи микросервисов
C:\Services\Microservices\*\logs\*.log {
    weekly
    rotate 8
    compress
    dateext
    missingok
    
    # Использование пользовательской команды сжатия (например, 7-Zip вместо встроенного)
    compresscmd "7z.exe a -tzip"
    compressext .zip
    
    # Создание файла заданного формата
    create 0640
}

# Логи Windows сервисов
C:\ProgramData\Services\logs\*.log {
    size 25M
    rotate 10
    compress
    copytruncate
    notifempty
    
    # Специальное форматирование имен архивных файлов
    olddir C:\ProgramData\Services\logs\archive    # Директория для архивов
    dateext
    dateformat -%Y-%m-%d     # Формат даты для архивных файлов
    
    # Удаление пустых директорий после ротации
    postrotate
        # Удаление пустых подкаталогов с архивными логами старше 6 месяцев
        Get-ChildItem -Path "C:\ProgramData\Services\logs\archive" -Directory | 
        Where-Object { 
            (Get-ChildItem -Path $_.FullName -File -Recurse).Count -eq 0 -and 
            $_.CreationTime -lt (Get-Date).AddMonths(-6) 
        } | 
        ForEach-Object { 
            Remove-Item $_.FullName -Force 
        }
    endscript
} 